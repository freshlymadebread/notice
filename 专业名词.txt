1. 语义化 ：就是用合理、正确的标签来展示内容，比如h1~h6定义标题。
    优点：
        易于用户阅读，样式丢失的时候能让页面呈现清晰的结构。
        有利于SEO，搜索引擎根据标签来确定上下文和各个关键字的权重。
        方便其他设备解析，如盲人阅读器根据语义渲染网页
        有利于开发和维护，语义化更具可读性，代码更好维护，与CSS3关系更和谐。
    例子：<header> <nav> <main> <artcil> <section> <aside> <footer>
2. 如何缩减页面的加载时间：
    1.使用CDN content Delivery Network，内容分发网络，，就是将你的图片、视频扩散到CDN网络所能到达之处，让用户就近下载文件，从而网络提速同时减轻服务器的负载。
    2.样式表的引用要放在文件开头，js脚本的引用要放在末尾
    3.减少http请求，尽量减少对外部文件的引用
    4.将多个文件合并
    5.不要用css表达式
    6.图片尽量用
    7.如果页面过于庞大的话，可以采用翻页后载入方式
3.  HTTP服务器，默认的端口号为80/tcp（木马Executor开放此端口）； 
    HTTPS（securely transferring web pages）服务器，默认的端口号为443/tcp 443/udp； 
    Telnet（不安全的文本传送），默认端口号为23/tcp（木马Tiny Telnet Server所开放的端口）；
4. 同源策略： 所谓同源是指，域名，协议，端口相同的客户端网址。
    同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据。
    不同源的页面之间不可以访问对方的cookie，DOM，ajax
    怎样解决呢：1.jsonp，通过标签导入可以不受同源限制的特点，用回调函数接受引用来的函数变量。
               2. document.domin = "name" 设置相同的名字 即可访问cookie
5. HTTP协议：HTTP1.0（只有短链接，每次TCP握手之后，只能传值一次）
            HTTP1.1（持久化连接。一次握手可以传值多次）
            HTTP2.0（同时进行传值）
            HTTP协议：超文本传输协议
            HTTPS协议：在HTTP协议上加上SSL协议
                 优点：
                （1） 所有信息都是加密传播，黑客无法窃听。
                （2） 具有校验机制，一旦被篡改，通信双方会立刻发现。
                （3） 配备身份证书，防止身份被冒充。
6.渐进增强和优雅降级
    优雅降低：先在高版本的有浏览器开发出功能，然后对低版本不支持的地方进行完善。
    渐进增强：在低版本的浏览器上开发功能，逐渐添加那些只有高版本浏览器才支持的功能。
7. SSL ： 安全套接字层，它是用于保护和验证Internet上数据的重要协议；HTTPS的重要一环
   TLS ： 比SSL更加安全高效
   使用SSL的优点：1.数据加密 2.身份验证 3.数据完整性
8. 常见的http请求回传吗：
    2xx：成功
        200请求已完成
        202已接受用于处理，但处理尚未完成  组内开发，本地运行访问服务器代码，不同源，是跨域访问。
    3xx: 重定向
        301资源位置已改变
    4xx：客户端错误
        401 未授权
        403 禁止
        404 资源找不到
    5xx：服务器错误
        500 服务器内部问题
9. H5的三种存储方式
    cookie localstorage sessionstorage
    cookie：H5以前用的；4K左右；关系型存储，且污染消息头
    localstorage：一直存储在客户端，使用key-value存储；各页面间共享，不管是不是新开的网页，只要同源就共享；（仅限于http协议）
    sessionstorage：打开链接时会把sessionstorage存储在新的页面中（仅限于http协议）
10.W3C：万维网联盟
11. web标准：结构，表现，行为
            行为：js  表现：html  结构：css
            有了web标准，大家都按照这个标准开发，形成统一规范

12.网站可用性：用户友好度；‘效率，生产力和满意度’

13.节点的种类有几种，分别是什么？

    (1)元素节点：nodeType ===1;
    (2)文本节点：nodeType ===3;
    (3)属性节点：nodeType ===2;
14. link标签和@important 方式
    尽量少用@important 方式 因为存在资源文件下载顺序混乱和http请求过多的问题
    区别：1.从属关系：@import是 CSS 提供的语法规则，只有导入样式表的作用；link是HTML提供的标签，不仅可以加载 CSS 文件，还可以定义 RSS、rel 连接属性等。
         2.加载顺序区别：加载页面时，link标签引入的 CSS 被同时加载；@import引入的 CSS 将在页面加载完毕后被加载。
         3.可以通过 JS 操作 DOM ，插入link标签来改变样式；由于 DOM 方法是基于文档的，无法使用@import的方式插入样式。
    注意link和@important 中的样式没有优先级，只会因为处于文件的位置而产生层叠覆盖效果
    因为@important的使用必须位于样式的顶部，且需要加分号，因此很容易被后声明的样式覆盖，会产生@important优先级低的感觉。
15.URL URI URN 的联系和区别

URI：Uniform Resource Identifier 统一资源标识符
URL：Uniform Resource Location 统一资源定位符
URN：Uniform Resource Name 统一资源名称
16. 变量提升